AWSTemplateFormatVersion: 2010-09-09
Description: | 
  Cloudformation template for my phonebook application to create a loadbalancer,
  ASG with a desired capacity of 2 Amazon Linux 2023 ec2 instance
  and a RDS mysql instance deployed in the default VPC for NOW!
  
Parameters:
  LBSecurityGroup: # ec2-securitygroup
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Opens Port 80 from anywhere. # Required
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp       
      VpcId: !Ref VPC

  WebServerSecurityGroup: # ec2-securitygroup
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Opens Port 22 from anywhere and 80 from the load balancer. # Required
      SecurityGroupIngress: 
        - SourceSecurityGroupId: !GetAtt LBSecurityGroup.GroupId
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp    
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp       
      VpcId: !Ref VPC

  RDSSecurityGroup: #rds-dbsecuritygroup
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      DBSecurityGroupIngress: # Required
        - EC2SecurityGroupId: !GetAtt WebServerSecurityGroup.GroupId
      GroupDescription: Opens port 3306 to WebServer SGs. # Required

  MyALB: # elasticloadbalacingv2-loadbalancer
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups: 
        - !GetAtt LBSecurityGroup.GroupId
      Subnets: !Ref Subnets
      Type: application

  MyALBTG: # elasticloadbalancingv2-targetgroup
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthyThresholdCount: 3
      IpAddressType: ipv4
      Name: TG1
      Port: 80
      Protocol: HTTP
      TargetType: instance
      UnhealthyThresholdCount: 5
      VpcId: !Ref VPC

  ALBListener:     #elasticloadbalancingv2-listener
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - TargetGroupArn: !Ref MyALBTG
          Type: forward
      LoadBalancerArn: !Ref MyALB # Required
      Port: 80
      Protocol: HTTP




Outputs: